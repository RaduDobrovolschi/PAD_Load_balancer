version: "3.8"
services:
  proxy:
    image: registry.hub.docker.com/radudob/pad_proxy
    ports:
      - 6969:6969
    environment:
      - SERVER_PORT=6969
      - APP_ENABLE_CACHING=true
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_0_INSTANCE_ID=0
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_0_PORT=8080
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_0_HOST=info1
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_0_SECURE=false

      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_1_INSTANCE_ID=1
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_1_PORT=8081
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_1_HOST=info2
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_1_SECURE=false

      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_2_INSTANCE_ID=2
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_2_PORT=8082
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_2_HOST=info3
      - SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_SERVICE1_2_SECURE=false
    depends_on:
      - info1
      - info2
      - info3

  info1:
    image: registry.hub.docker.com/radudob/pad_info
    ports:
      - 8080:8080
    environment:
      - SERVER_PORT=8080
      - SPRING_DATA_MONGODB_URI=mongodb://mongo1:30001/mydatabase
    # links:
    #   - mongo1:app_db
    depends_on:
      - mongo1
  info2:
    image: registry.hub.docker.com/radudob/pad_info
    ports:
      - 8081:8081
    environment:
      - SERVER_PORT=8081
      - SPRING_DATA_MONGODB_URI=mongodb://mongo2:30002/mydatabase
    # links:
    #   - mongo1:app_db
    depends_on:
      - mongo2
  info3:
    image: registry.hub.docker.com/radudob/pad_info
    ports:
      - 8082:8082
    environment:
      - SERVER_PORT=8082
      - SPRING_DATA_MONGODB_URI=mongodb://mongo3:30003/mydatabase
    # links:
    #   - mongo1:app_db
    depends_on:
      - mongo3


#https://github.com/UpSync-Dev/docker-compose-mongo-replica-set/tree/main
  mongo1:
    image: mongo:5
    container_name: mongo1
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001"]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo:5
    container_name: mongo2
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002"]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 30002:30002

  mongo3:
    image: mongo:5
    container_name: mongo3
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003"]
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - 30003:30003